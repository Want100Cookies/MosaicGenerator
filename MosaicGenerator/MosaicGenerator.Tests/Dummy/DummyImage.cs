using MosaicGenerator.Abstractions;
using System.Threading.Tasks;
using System;

namespace MosaicGenerator.Tests.Dummy
{
    public class DummyImage : IImage
    {
        public string GetFileName() => "Dummy";

        public Task<int> GetWidth() => Task.FromResult(4);
        public Task<int> GetHeight() => Task.FromResult(4);

        public Task<byte[]> GetPixels()
        {
            // BGRA
            return Task.FromResult(new byte[]
                {
                    0xFF, 0x00, 0x00, 0xFF,     0xFF, 0x00, 0x00, 0xFF,     0x00, 0xFF, 0x00, 0xFF,     0x00, 0xFF, 0x00, 0xFF,
                    0xFF, 0x00, 0x00, 0xFF,     0xFF, 0x00, 0x00, 0xFF,     0x00, 0xFF, 0x00, 0xFF,     0x00, 0xFF, 0x00, 0xFF,
                    0x00, 0x00, 0xFF, 0xFF,     0x00, 0x00, 0xFF, 0xFF,     0x00, 0xFF, 0xFF, 0xFF,     0x00, 0xFF, 0xFF, 0xFF,
                    0x00, 0x00, 0xFF, 0xFF,     0x00, 0x00, 0xFF, 0xFF,     0x00, 0xFF, 0xFF, 0xFF,     0x00, 0xFF, 0xFF, 0xFF
                });
        }

        public Task<byte[]> GetResizedPixels(int width, int height)
        {
            throw new NotImplementedException();
        }
    }
}